use Mix.Config

alias Mix.Tasks.Feeder, as: Feeder
alias Mix.Tasks.Postgres, as: Postgres
alias Mix.Tasks.Castle.Rollup, as: Rollup
alias Mix.Tasks.Bigquery.Sync, as: BigQuerySync

# For production, we configure the host to read the PORT
# from the system environment. Therefore, you will need
# to set PORT=80 before running your server.
#
# You should also configure the url host to something
# meaningful, we use this information when generating URLs.
#
# Finally, we also include the path to a manifest
# containing the digested version of static files. This
# manifest is generated by the mix phoenix.digest task
# which you typically run after static files are built.
config :castle, CastleWeb.Endpoint, server: true

# Do not print debug messages in production
config :logger, level: :info

# External clients
config :castle, :redis, Castle.Redis.Api

# Scheduled jobs
config :castle, Castle.Scheduler,
  jobs: [
    {"* * * * *", {Feeder.Sync, :run, [["--lock"]]}},
    {"1 * * * *", {BigQuerySync.Podcasts, :run, [["--lock"]]}},
    {"2 * * * *", {BigQuerySync.Episodes, :run, [["--lock"]]}},
    {"3 0 * * *", {BigQuerySync.Agentnames, :run, [["--lock"]]}},
    {"4 0 * * 4", {BigQuerySync.Geonames, :run, [["--lock"]]}},
    # 8-9 UTC reserved for vacuuming rollup tables
    {"*/5 8 * * *", {Postgres.Vacuum, :run, [["--lock"]]}},
    {"0,15,30,45 0-7,9-23 * * *", {Rollup.Hourly, :run, [["--lock"]]}},
    {"15 6 * * *", {Rollup.Monthly, :run, [["--lock"]]}},
    {"20,50 0-7,9-23 * * *", {Rollup.Geocountries, :run, [["--lock"]]}},
    {"25,55 0-7,9-23 * * *", {Rollup.Geometros, :run, [["--lock"]]}},
    {"30,0 0-7,9-23 * * *", {Rollup.Geosubdivs, :run, [["--lock"]]}},
    {"35,5 0-7,9-23 * * *", {Rollup.Agents, :run, [["--lock"]]}},
    {"40,10 0-7,9-23 * * *", {Rollup.MonthlyUniques, :run, [["--lock"]]}},
    {"40,10 0-7,9-23 * * *", {Rollup.LastWeekUniques, :run, [["--lock"]]}},
    {"45,15 0-7,9-23 * * *", {Rollup.WeeklyUniques, :run, [["--lock"]]}},
    {"45,15 0-7,9-23 * * *", {Rollup.Last28Uniques, :run, [["--lock"]]}}
  ]

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :castle, CastleWeb.Endpoint,
#       ...
#       url: [host: "example.com", port: 443],
#       https: [port: 443,
#               keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#               certfile: System.get_env("SOME_APP_SSL_CERT_PATH")]
#
# Where those two env variables return an absolute path to
# the key and cert in disk or a relative path inside priv,
# for example "priv/ssl/server.key".
#
# We also recommend setting `force_ssl`, ensuring no data is
# ever sent via http, always redirecting to https:
#
#     config :castle, CastleWeb.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.

# ## Using releases
#
# If you are doing OTP releases, you need to instruct Phoenix
# to start the server for all endpoints:
#
#     config :phoenix, :serve_endpoints, true
#
# Alternatively, you can configure exactly which server to
# start per endpoint:
#
#     config :castle, CastleWeb.Endpoint, server: true
#

# Finally import the config/prod.secret.exs
# which should be versioned separately.
# import_config "prod.secret.exs"
